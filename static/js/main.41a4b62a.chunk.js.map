{"version":3,"sources":["reducers/profileReducer.js","reducers/projectReducer.js","reducers/elementReducer.js","reducers/keywordReducer.js","reducers/skillReducer.js","reducers/rootReducer.js","database.js","templates/TopBar.js","templates/SideBar.js","actions/profileActions.js","templates/MainLayout.js","access/ProtectedRoute.js","actions/projectActions.js","moleculs/ProjectCard.js","organisms/ProjectsGrid.js","pages/PersonalProjects.js","pages/SocialProjects.js","atoms/TextInput.js","moleculs/ProfileCard.js","organisms/SkillCreate.js","actions/skillActions.js","actions/keywordActions.js","moleculs/SkillCard.js","organisms/SkillsGrid.js","pages/UserProfile.js","atoms/KeywordsList.js","atoms/TeamList.js","atoms/ButtonInput.js","atoms/ChatSection.js","moleculs/DetailsCard.js","organisms/ElementCreate.js","actions/elementActions.js","moleculs/ElementCard.js","organisms/ElementsGrid.js","pages/ProjectDetails.js","atoms/SelectInput.js","pages/ProjectCreate.js","access/SigninForm.js","access/SignupForm.js","App.js","index.js"],"names":["initial","error","profileReducer","state","action","type","console","log","err","message","data","projects","projectReducer","id","elements","elementReducer","keywords","keywordReducer","skills","skillReducer","rootReducer","combineReducers","profile","project","element","keyword","skill","firebase","firebaseReducer","firestore","firestoreReducer","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","settings","timestampsInSnapshots","connect","sideWidth","colors","red","green","blue","orange","indigo","number","email","charCodeAt","avatarColor","AppBar","sx","width","elevation","Toolbar","Typography","flexGrow","format","Date","Avatar","backgroundColor","ml","toUpperCase","auth","dispatch","signOut","gs","getFirebase","then","history","useHistory","location","useLocation","userMenu","text","icon","PersonOutline","color","path","AddCircleOutline","mainMenu","Dashboard","authMenu","Login","Drawer","variant","anchor","p","cursor","onClick","push","uid","List","map","item","ListItem","button","pathname","ListItemIcon","ListItemText","primary","Divider","marginTop","Logout","StyledContainer","styled","padding","theme","spacing","StyledWrapper","display","Offset","mixins","toolbar","MainLayout","children","ProtectedRoute","props","useSelector","isLoaded","isEmpty","to","updateProject","getState","getFirestore","authorid","personal","collection","doc","social","update","catch","title","Card","CardHeader","subheader","join","avatar","team","some","i","role","IconButton","FolderOpen","People","PeopleOutline","CardContent","description","breakpoints","default","ProjectsGrid","breakpointCols","className","columnClassName","compose","ordered","firestoreConnect","subcollections","orderBy","storeAs","TextInput","name","add","TextField","required","mb","placeholder","label","fullWidth","removeProfile","delete","updateProfile","useState","edit","setEdit","Edit","form","Done","initialValues","onSubmit","values","handleChange","handleSubmit","autoComplete","onChange","value","rows","multiline","Button","size","createSkill","createdat","createKeyword","ref","where","word","get","snapshot","length","forEach","resetForm","quantity","endIcon","KeyboardArrowRight","updateSkill","removeSkill","SkillsGrid","Box","mt","Grid","container","md","details","Add","fontSize","filter","Close","user","newRole","ButtonInput","FormControl","OutlinedInput","endAdornment","chat","Send","index","removeProject","setChat","Subject","Chat","createElement","file","projectid","storageRef","storage","fileRef","child","put","getDownloadURL","url","filename","fileurl","setFile","task","setTask","mr","component","hidden","e","target","files","updateElement","removeElement","axios","responseType","res","fileDownload","Download","CheckCircleOutline","ElementsGrid","ownProps","match","params","personalProjects","socialProjects","personalElements","socialElements","SelectInput","items","InputLabel","Select","MenuItem","createProject","split","signIn","creds","signInWithEmailAndPassword","password","signUp","createUserWithEmailAndPassword","resp","set","mistake","setMistake","confirm","createTheme","typography","fontFamily","palette","main","secondary","App","ThemeProvider","basename","process","SigninForm","SignupForm","UserProfile","ProjectCreate","exact","render","PersonalProjects","SocialProjects","ProjectDetails","store","createStore","applyMiddleware","thunk","withExtraArgument","rrfProps","database","config","userProfile","useFirestoreForProfile","attachAuthIsReady","createFirestoreInstance","AuthIsLoaded","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.41a4b62a.chunk.js","sourcesContent":["const initial = {\r\n  error: null,\r\n};\r\n\r\nconst profileReducer = (state = initial, action) => {\r\n  switch (action.type) {\r\n    case 'SIGNIN_SUCCESS':\r\n      console.log('signin success');\r\n      return { ...state, error: null };\r\n    case 'SIGNIN_ERROR':\r\n      console.log('signin error');\r\n      return { ...state, error: action.err.message };\r\n    case 'SIGNUP_SUCCESS':\r\n      console.log('signup success');\r\n      return { ...state, error: null };\r\n    case 'SIGNUP_ERROR':\r\n      console.log('signup error');\r\n      return { ...state, error: action.err.message };\r\n    case 'SIGNOUT_SUCCESS':\r\n      console.log('signout success');\r\n      return state;\r\n    case 'UPDATEPROFILE_SUCCESS':\r\n      console.log(action.data);\r\n      return state;\r\n    case 'UPDATEPROFILE_ERROR':\r\n      console.log(action.err);\r\n      return state;\r\n    case 'REMOVEPROFILE_SUCCESS':\r\n      console.log('removeprofile success');\r\n      return state;\r\n    default: return state;\r\n  }\r\n};\r\n\r\nexport default profileReducer;\r\n","const initial = {\r\n  projects: [],\r\n};\r\n\r\nconst projectReducer = (state = initial, action) => {\r\n  switch (action.type) {\r\n    case 'CREATEPROJECT_SUCCESS':\r\n      console.log(action.data);\r\n      return state;\r\n    case 'CREATEPROJECT_ERROR':\r\n      console.log(action.err);\r\n      return state;\r\n    case 'UPDATEPROJECT_SUCCESS':\r\n      console.log(action.data);\r\n      return state;\r\n    case 'UPDATEPROJECT_ERROR':\r\n      console.log(action.err);\r\n      return state;\r\n    case 'REMOVEPROJECT_SUCCESS':\r\n      console.log(action.id);\r\n      return state;\r\n    case 'REMOVEPROJECT_ERROR':\r\n      console.log(action.err);\r\n      return state;\r\n    default: return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;\r\n","const initial = {\r\n  elements: [],\r\n};\r\n\r\nconst elementReducer = (state = initial, action) => {\r\n  switch (action.type) {\r\n    case 'CREATEELEMENT_SUCCESS':\r\n      console.log(action.data);\r\n      return state;\r\n    case 'CREATEELEMENT_ERROR':\r\n      console.log(action.err);\r\n      return state;\r\n    case 'UPDATEELEMENT_SUCCESS':\r\n      console.log(action.data);\r\n      return state;\r\n    case 'UPDATEELEMENT_ERROR':\r\n      console.log(action.err);\r\n      return state;\r\n    case 'REMOVEELEMENT_SUCCESS':\r\n      console.log(action.id);\r\n      return state;\r\n    case 'REMOVEELEMENT_ERROR':\r\n      console.log(action.err);\r\n      return state;\r\n    default: return state;\r\n  }\r\n};\r\n\r\nexport default elementReducer;\r\n","const initial = {\r\n  keywords: [],\r\n};\r\n\r\nconst keywordReducer = (state = initial, action) => {\r\n  switch (action.type) {\r\n    case 'CREATEKEYWORD_SUCCESS':\r\n      console.log(action.data);\r\n      return state;\r\n    case 'CREATEKEYWORD_ERROR':\r\n      console.log(action.err);\r\n      return state;\r\n    case 'UPDATEKEYWORD_SUCCESS':\r\n      console.log(action.data);\r\n      return state;\r\n    case 'UPDATEKEYWORD_ERROR':\r\n      console.log(action.err);\r\n      return state;\r\n    case 'REMOVEKEYWORD_SUCCESS':\r\n      console.log(action.id);\r\n      return state;\r\n    case 'REMOVEKEYWORD_ERROR':\r\n      console.log(action.err);\r\n      return state;\r\n    default: return state;\r\n  }\r\n};\r\n\r\nexport default keywordReducer;\r\n","const initial = {\r\n  skills: [],\r\n};\r\n\r\nconst skillReducer = (state = initial, action) => {\r\n  switch (action.type) {\r\n    case 'CREATESKILL_SUCCESS':\r\n      console.log(action.data);\r\n      return state;\r\n    case 'CREATESKILL_ERROR':\r\n      console.log(action.err);\r\n      return state;\r\n    case 'UPDATESKILL_SUCCESS':\r\n      console.log(action.data);\r\n      return state;\r\n    case 'UPDATESKILL_ERROR':\r\n      console.log(action.err);\r\n      return state;\r\n    case 'REMOVESKILL_SUCCESS':\r\n      console.log(action.id);\r\n      return state;\r\n    case 'REMOVESKILL_ERROR':\r\n      console.log(action.err);\r\n      return state;\r\n    default: return state;\r\n  }\r\n};\r\n\r\nexport default skillReducer;\r\n","import { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\nimport profileReducer from 'reducers/profileReducer';\r\nimport projectReducer from 'reducers/projectReducer';\r\nimport elementReducer from 'reducers/elementReducer';\r\nimport keywordReducer from 'reducers/keywordReducer';\r\nimport skillReducer from 'reducers/skillReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  profile: profileReducer,\r\n  project: projectReducer,\r\n  element: elementReducer,\r\n  keyword: keywordReducer,\r\n  skill: skillReducer,\r\n\r\n  firebase: firebaseReducer,\r\n  firestore: firestoreReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/analytics';\r\nimport 'firebase/compat/firestore';\r\nimport 'firebase/compat/auth';\r\nimport 'firebase/compat/storage';\r\n\r\nfirebase.initializeApp({\r\n  apiKey: 'AIzaSyAqSX015CALe_Wi5r9Tj9RJSG1fkO_cRzE',\r\n  authDomain: 'creativeprojects-db.firebaseapp.com',\r\n  projectId: 'creativeprojects-db',\r\n  storageBucket: 'creativeprojects-db.appspot.com',\r\n  messagingSenderId: '1085559270275',\r\n  appId: '1:1085559270275:web:b95dae1cf2df8d7777a4b6',\r\n  measurementId: 'G-C37SVXB4H5',\r\n});\r\nfirebase.analytics();\r\nfirebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport default firebase;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Typography, AppBar, Toolbar, Avatar } from '@mui/material';\r\nimport { red, green, blue, orange, indigo } from '@mui/material/colors';\r\nimport { format } from 'date-fns';\r\n\r\nconst TopBar = ({ profile, sideWidth }) => {\r\n  const colors = [red, green, blue, orange, indigo];\r\n  const number = profile.email && profile.email.charCodeAt(0) % 5;\r\n  const avatarColor = profile.email ? colors[number][700] : blue;\r\n\r\n  return (\r\n    <AppBar\r\n      sx={{ width: `calc(100% - ${sideWidth}px)` }}\r\n      elevation={0}\r\n    >\r\n      <Toolbar>\r\n        <Typography sx={{ flexGrow: 1 }}>\r\n          Today is the {format(new Date(), 'do MMMM Y')}\r\n        </Typography>\r\n        <Typography>{profile.email}</Typography>\r\n        <Avatar sx={{ backgroundColor: avatarColor, ml: 2 }}>\r\n          {profile.email && profile.email[0].toUpperCase()}\r\n        </Avatar>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.firebase.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps)\r\n  (TopBar);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from 'actions/profileActions';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { Drawer, Typography, List, Divider } from '@mui/material';\r\nimport { ListItem, ListItemText, ListItemIcon } from '@mui/material';\r\nimport { PersonOutline, Login, Logout } from '@mui/icons-material';\r\nimport { AddCircleOutline, Dashboard } from '@mui/icons-material';\r\n\r\nconst SideBar = ({ sideWidth, auth, signOut }) => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const userMenu = [\r\n    {\r\n      text: 'Your Profile',\r\n      icon: <PersonOutline color='secondary' />,\r\n      path: '/profile',\r\n    },\r\n    {\r\n      text: 'Create Project',\r\n      icon: <AddCircleOutline color='secondary' />,\r\n      path: '/create',\r\n    },\r\n  ];\r\n  const mainMenu = [\r\n    {\r\n      text: 'Personal Projects',\r\n      icon: <Dashboard color='secondary' />,\r\n      path: '/personal',\r\n    },\r\n    {\r\n      text: 'Social Projects',\r\n      icon: <Dashboard color='secondary' />,\r\n      path: '/social',\r\n    },\r\n  ];\r\n  const authMenu = [\r\n    {\r\n      text: 'Sign In',\r\n      icon: <Login color='secondary' />,\r\n      path: '/signin',\r\n    },\r\n    {\r\n      text: 'Sign Up',\r\n      icon: <Login color='secondary' />,\r\n      path: '/signup',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Drawer\r\n      sx={{ width: sideWidth, '& .MuiDrawer-paper': { width: sideWidth } }}\r\n      variant='permanent'\r\n      anchor='left'\r\n    >\r\n      <Typography\r\n        sx={{ p: 2, cursor: 'pointer' }}\r\n        variant='h5'\r\n        onClick={() => history.push('/profile')}\r\n      >\r\n        Material App\r\n      </Typography>\r\n      {auth.uid && <div>\r\n        <List>\r\n          {userMenu.map(item =>\r\n            <ListItem button\r\n              sx={{ backgroundColor: location.pathname === item.path && '#f4f4f4' }}\r\n              onClick={() => history.push(item.path)}\r\n              key={item.text}\r\n            >\r\n              <ListItemIcon>{item.icon}</ListItemIcon>\r\n              <ListItemText primary={item.text} />\r\n            </ListItem>\r\n          )}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {mainMenu.map(item =>\r\n            <ListItem button\r\n              sx={{ backgroundColor: location.pathname === item.path && '#f4f4f4' }}\r\n              onClick={() => history.push(item.path)}\r\n              key={item.text}\r\n            >\r\n              <ListItemIcon>{item.icon}</ListItemIcon>\r\n              <ListItemText primary={item.text} />\r\n            </ListItem>\r\n          )}\r\n        </List>\r\n        <List>\r\n          <ListItem button\r\n            sx={{ marginTop: '50vh' }}\r\n            onClick={signOut}\r\n          >\r\n            <ListItemIcon><Logout color='secondary' /></ListItemIcon>\r\n            <ListItemText primary='Sign Out' />\r\n          </ListItem>\r\n        </List>\r\n      </div>}\r\n      {!auth.uid && <List>\r\n        {authMenu.map(item =>\r\n          <ListItem button\r\n            sx={{ backgroundColor: location.pathname === item.path && '#f4f4f4' }}\r\n            onClick={() => history.push(item.path)}\r\n            key={item.text}\r\n          >\r\n            <ListItemIcon>{item.icon}</ListItemIcon>\r\n            <ListItemText primary={item.text} />\r\n          </ListItem>\r\n        )}\r\n      </List>}\r\n    </Drawer>\r\n  )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.firebase.auth,\r\n});\r\n\r\nconst mapDispatchToPorps = (dispatch) => ({\r\n  signOut: () => dispatch(signOut()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToPorps)\r\n  (SideBar);\r\n","export const signIn = (creds) => (dispatch, gs, { getFirebase }) => {\r\n  const firebase = getFirebase();\r\n  firebase.auth().signInWithEmailAndPassword(\r\n    creds.email, creds.password,\r\n  ).then(() => {\r\n    dispatch({ type: 'SIGNIN_SUCCESS' });\r\n  }).catch((err) => {\r\n    dispatch({ type: 'SIGNIN_ERROR', err });\r\n  })\r\n};\r\n\r\nexport const signOut = () => (dispatch, gs, { getFirebase }) => {\r\n  const firebase = getFirebase();\r\n  firebase.auth().signOut().then(() => {\r\n    dispatch({ type: 'SIGNOUT_SUCCESS' });\r\n  })\r\n};\r\n\r\nexport const signUp = (user) => (dispatch, gs, { getFirebase, getFirestore }) => {\r\n  const firebase = getFirebase();\r\n  const firestore = getFirestore();\r\n  firebase.auth().createUserWithEmailAndPassword(\r\n    user.email, user.password,\r\n  ).then((resp) => (\r\n    firestore.collection('users').doc(resp.user.uid).set({\r\n      email: user.email, name: user.name,\r\n    })\r\n  )).then(() => {\r\n    dispatch({ type: 'SIGNUP_SUCCESS' });\r\n  }).catch((err) => {\r\n    dispatch({ type: 'SIGNUP_ERROR', err });\r\n  })\r\n};\r\n\r\nexport const updateProfile = (data) => (dispatch, getState, { getFirestore }) => {\r\n  const firestore = getFirestore();\r\n  const authorid = getState().firebase.auth.uid;\r\n  const ref = firestore.collection('users').doc(authorid);\r\n  ref.update({\r\n    ...data,\r\n  }).then(() => {\r\n    dispatch({ type: 'UPDATEPROFILE_SUCCESS', data });\r\n  }).catch((err) => {\r\n    dispatch({ type: 'UPDATEPROFILE_ERROR', err });\r\n  })\r\n};\r\n\r\nexport const removeProfile = () => (dispatch, getState, { getFirestore }) => {\r\n  const firestore = getFirestore();\r\n  const authorid = getState().firebase.auth.uid;\r\n  const ref = firestore.collection('users').doc(authorid);\r\n  ref.delete().then(() => {\r\n    dispatch({ type: 'REMOVEPROFILE_SUCCESS' });\r\n  })\r\n};\r\n","import React from 'react';\r\nimport { styled } from '@mui/system';\r\nimport TopBar from 'templates/TopBar';\r\nimport SideBar from 'templates/SideBar';\r\n\r\nconst sideWidth = 250;\r\n\r\nconst StyledContainer = styled('div')(({ theme }) => ({\r\n  width: '100%',\r\n  padding: theme.spacing(3),\r\n}));\r\n\r\nconst StyledWrapper = styled('div')({\r\n  display: 'flex',\r\n});\r\n\r\nconst Offset = styled('div')(({ theme }) => theme.mixins.toolbar);\r\n\r\nconst MainLayout = ({ children }) => (\r\n  <StyledWrapper>\r\n    <TopBar sideWidth={sideWidth} />\r\n    <SideBar sideWidth={sideWidth} />\r\n    <StyledContainer>\r\n      <Offset /> {children}\r\n    </StyledContainer>\r\n  </StyledWrapper>\r\n);\r\n\r\nexport default MainLayout;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { isLoaded, isEmpty } from 'react-redux-firebase';\r\n\r\nconst ProtectedRoute = ({ ...props }) => {\r\n  const auth = useSelector(state => state.firebase.auth);\r\n  return (\r\n    isLoaded(auth) && !isEmpty(auth) ?\r\n      <Route {...props} /> :\r\n      <Redirect to='/signin' />\r\n  )\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","export const createProject = (data) => (dispatch, getState, { getFirestore }) => {\r\n  const firestore = getFirestore();\r\n  const authorid = getState().firebase.auth.uid;\r\n  const profile = getState().firebase.profile;\r\n  const personal = firestore.collection('users').doc(authorid).collection('projects');\r\n  const social = firestore.collection('projects');\r\n  const ref = data.type === 'personal' ? personal : social;\r\n  ref.add({\r\n    ...data,\r\n    chat: [],\r\n    team: [{ email: profile.email, role: 'admin' }],\r\n    authorid: authorid,\r\n    createdat: new Date(),\r\n  }).then(() => {\r\n    dispatch({ type: 'CREATEPROJECT_SUCCESS', data });\r\n  }).catch((err) => {\r\n    dispatch({ type: 'CREATEPROJECT_ERROR', err });\r\n  })\r\n};\r\n\r\nexport const updateProject = (data, id) => (dispatch, getState, { getFirestore }) => {\r\n  const firestore = getFirestore();\r\n  const authorid = getState().firebase.auth.uid;\r\n  const personal = firestore.collection('users').doc(authorid).collection('projects');\r\n  const social = firestore.collection('projects');\r\n  const ref = data.type === 'personal' ? personal : social;\r\n  ref.doc(id).update({\r\n    ...data,\r\n  }).then(() => {\r\n    dispatch({ type: 'UPDATEPROJECT_SUCCESS', data });\r\n  }).catch((err) => {\r\n    dispatch({ type: 'UPDATEPROJECT_ERROR', err });\r\n  })\r\n};\r\n\r\nexport const removeProject = (data, id) => (dispatch, getState, { getFirestore }) => {\r\n  const firestore = getFirestore();\r\n  const authorid = getState().firebase.auth.uid;\r\n  const personal = firestore.collection('users').doc(authorid).collection('projects');\r\n  const social = firestore.collection('projects');\r\n  const ref = data.type === 'personal' ? personal : social;\r\n  ref.doc(id).delete().then(() => {\r\n    dispatch({ type: 'REMOVEPROJECT_SUCCESS', id });\r\n  }).catch((err) => {\r\n    dispatch({ type: 'REMOVEPROJECT_SUCCESS', err });\r\n  })\r\n};\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { updateProject } from 'actions/projectActions';\r\nimport { IconButton, Typography } from '@mui/material';\r\nimport { Card, CardHeader, CardContent, Avatar } from '@mui/material';\r\nimport { red, green, blue, orange, indigo } from '@mui/material/colors';\r\nimport { FolderOpen, PeopleOutline, People } from '@mui/icons-material';\r\n\r\nconst ProjectCard = ({ project, profile, updateProject }) => {\r\n  const colors = [red, green, blue, orange, indigo];\r\n  const number = project.title.charCodeAt(0) % 5;\r\n  let avatarColor = colors[number][700];\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Card elevation={1}>\r\n      <CardHeader\r\n        title={project.title}\r\n        subheader={project.keywords && project.keywords.join(' ')}\r\n        avatar={\r\n          <Avatar sx={{ backgroundColor: avatarColor }}>\r\n            {project.title[0].toUpperCase()}\r\n          </Avatar>\r\n        }\r\n        action={<>\r\n          {project.team.some(i =>\r\n            i.email === profile.email && (i.role === 'member' || i.role === 'admin')\r\n          ) && <IconButton onClick={() => {\r\n            history.push('/' + project.type + '/' + project.id)\r\n          }}>\r\n              <FolderOpen />\r\n            </IconButton>}\r\n          {project.team.some(i =>\r\n            i.email === profile.email && i.role === 'wait'\r\n          ) && <IconButton>\r\n              <People />\r\n            </IconButton>}\r\n          {!project.team.some(i =>\r\n            i.email === profile.email\r\n          ) && <IconButton onClick={() => {\r\n            updateProject({\r\n              type: project.type,\r\n              team: [...project.team, { email: profile.email, role: 'wait' }],\r\n            }, project.id);\r\n          }}>\r\n              <PeopleOutline />\r\n            </IconButton>}\r\n        </>}\r\n      />\r\n      <CardContent>\r\n        <Typography\r\n          variant='body2'\r\n          color='textSecondary'\r\n        >\r\n          {project.description}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.firebase.profile,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateProject: (data, id) => dispatch(updateProject(data, id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)\r\n  (ProjectCard);\r\n","import React from 'react';\r\nimport Masonry from 'react-masonry-css';\r\nimport ProjectCard from 'moleculs/ProjectCard';\r\n\r\nconst breakpoints = {\r\n  default: 3,\r\n  1100: 2,\r\n  700: 1,\r\n};\r\n\r\nconst ProjectsGrid = ({ projects }) => (\r\n  <Masonry\r\n    breakpointCols={breakpoints}\r\n    className='my-masonry-grid'\r\n    columnClassName='my-masonry-grid_column'\r\n  >\r\n    {projects && projects.map(project =>\r\n      <ProjectCard key={project.id} project={project} />\r\n    )}\r\n  </Masonry>\r\n);\r\n\r\nexport default ProjectsGrid;\r\n","import React from 'react'\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport ProjectsGrid from 'organisms/ProjectsGrid';\r\n\r\nconst PersonalProjects = ({ personal }) => (\r\n  <ProjectsGrid\r\n    projects={personal}\r\n    type='personal'\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  personal: state.firestore.ordered.personal,\r\n  auth: state.firebase.auth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect(props => [\r\n    {\r\n      collection: 'users', doc: props.auth.uid,\r\n      subcollections: [{ collection: 'projects' }],\r\n      orderBy: ['createdat', 'desc'],\r\n      storeAs: 'personal',\r\n    },\r\n  ]),\r\n)(PersonalProjects);\r\n","import React from 'react'\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport ProjectsGrid from 'organisms/ProjectsGrid';\r\n\r\nconst SocialProjects = ({ social }) => (\r\n  <ProjectsGrid\r\n    projects={social}\r\n    type='social'\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  social: state.firestore.ordered.social,\r\n  profile: state.firebase.profile,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    {\r\n      collection: 'projects',\r\n      orderBy: ['createdat', 'desc'],\r\n      storeAs: 'social',\r\n    },\r\n  ]),\r\n)(SocialProjects);\r\n","import React from 'react';\r\nimport { TextField } from '@mui/material';\r\n\r\nconst TextInput = ({ name, add, ...props }) => (\r\n  <TextField {...props}\r\n    required={add ? false : true}\r\n    sx={{ mb: add ? 0 : 2 }}\r\n    placeholder={name}\r\n    label={name}\r\n    name={name}\r\n    variant='outlined'\r\n    color='secondary'\r\n    fullWidth\r\n  />\r\n);\r\n\r\nexport default TextInput;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { removeProfile, updateProfile } from 'actions/profileActions';\r\nimport { IconButton, Typography, Button } from '@mui/material';\r\nimport { Card, CardHeader, CardContent } from '@mui/material';\r\nimport { Edit, Done } from '@mui/icons-material';\r\nimport { Formik } from 'formik';\r\nimport TextInput from 'atoms/TextInput';\r\n\r\nconst ProfileCard = ({ profile, removeProfile, updateProfile }) => {\r\n  const [edit, setEdit] = useState(false);\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Card elevation={1}>\r\n      <CardHeader\r\n        title={profile.name}\r\n        action={<>\r\n          {!edit && <IconButton\r\n            onClick={() => setEdit(true)}\r\n          >\r\n            <Edit />\r\n          </IconButton>}\r\n          {edit && <IconButton\r\n            type='submit'\r\n            form='edit'\r\n          >\r\n            <Done />\r\n          </IconButton>}\r\n        </>}\r\n      />\r\n      <CardContent>\r\n        {!edit && <Typography\r\n          variant='body2'\r\n          color='textSecondary'\r\n        >\r\n          {profile.description || 'edit profile and add description'}\r\n        </Typography>}\r\n        {edit && <Formik\r\n          initialValues={{\r\n            name: profile.name,\r\n            description: profile.description,\r\n          }}\r\n          onSubmit={(values) => {\r\n            updateProfile(values);\r\n            setEdit(false);\r\n          }}\r\n        >\r\n          {({ values, handleChange, handleSubmit }) => (\r\n            <form\r\n              id='edit'\r\n              onSubmit={handleSubmit}\r\n              autoComplete='off'\r\n            >\r\n              <TextInput\r\n                onChange={handleChange}\r\n                value={values.name}\r\n                name='name'\r\n                type='text'\r\n              />\r\n              <TextInput\r\n                onChange={handleChange}\r\n                value={values.description}\r\n                name='description'\r\n                type='text'\r\n                rows={10}\r\n                multiline\r\n              />\r\n            </form>\r\n          )}\r\n        </Formik>}\r\n        {edit && <Button\r\n          color='secondary'\r\n          size='small'\r\n          onClick={() => {\r\n            removeProfile();\r\n            history.push('/signup');\r\n          }}\r\n        >\r\n          Delete Account\r\n        </Button>}\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  removeProfile: () => dispatch(removeProfile()),\r\n  updateProfile: (data) => dispatch(updateProfile(data)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)\r\n  (ProfileCard);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createSkill } from 'actions/skillActions';\r\nimport { createKeyword } from 'actions/keywordActions';\r\nimport { Formik } from 'formik';\r\nimport { Button } from '@mui/material';\r\nimport { KeyboardArrowRight } from '@mui/icons-material';\r\nimport TextInput from 'atoms/TextInput';\r\n\r\nconst SkillCreate = ({ createSkill, createKeyword }) => (\r\n  <Formik\r\n    initialValues={{\r\n      title: '',\r\n      description: '',\r\n    }}\r\n    onSubmit={(values, { resetForm }) => {\r\n      createSkill({ ...values });\r\n      createKeyword({\r\n        word: values.title, quantity: 1\r\n      });\r\n      resetForm();\r\n    }}\r\n  >\r\n    {({ values, handleChange, handleSubmit }) => (\r\n      <form\r\n        onSubmit={handleSubmit}\r\n        autoComplete='off'\r\n      >\r\n        <TextInput\r\n          onChange={handleChange}\r\n          value={values.title}\r\n          name='title'\r\n          type='text'\r\n        />\r\n        <TextInput\r\n          onChange={handleChange}\r\n          value={values.description}\r\n          name='description'\r\n          type='text'\r\n          rows={2}\r\n          multiline\r\n        />\r\n        <Button\r\n          type='submit'\r\n          color='secondary'\r\n          variant='contained'\r\n          endIcon={<KeyboardArrowRight />}\r\n        >\r\n          Add Skill\r\n        </Button>\r\n      </form>\r\n    )}\r\n  </Formik>\r\n);\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  createSkill: (data) => dispatch(createSkill(data)),\r\n  createKeyword: (data) => dispatch(createKeyword(data)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)\r\n  (SkillCreate);\r\n","export const createSkill = (data) => (dispatch, getState, { getFirestore }) => {\r\n  const firestore = getFirestore();\r\n  const authorid = getState().firebase.auth.uid;\r\n  const ref = firestore.collection('users').doc(authorid).collection('skills');\r\n  ref.add({\r\n    ...data,\r\n    createdat: new Date(),\r\n  }).then(() => {\r\n    dispatch({ type: 'CREATESKILL_SUCCESS', data });\r\n  }).catch((err) => {\r\n    dispatch({ type: 'CREATESKILL_ERROR', err });\r\n  })\r\n};\r\n\r\nexport const updateSkill = (data, id) => (dispatch, getState, { getFirestore }) => {\r\n  const firestore = getFirestore();\r\n  const authorid = getState().firebase.auth.uid;\r\n  const ref = firestore.collection('users').doc(authorid).collection('skills');\r\n  ref.doc(id).update({\r\n    ...data,\r\n  }).then(() => {\r\n    dispatch({ type: 'UPDATESKILL_SUCCESS', data });\r\n  }).catch((err) => {\r\n    dispatch({ type: 'UPDATESKILL_ERROR', err });\r\n  })\r\n};\r\n\r\nexport const removeSkill = (id) => (dispatch, getState, { getFirestore }) => {\r\n  const firestore = getFirestore();\r\n  const authorid = getState().firebase.auth.uid;\r\n  const ref = firestore.collection('users').doc(authorid).collection('skills');\r\n  ref.doc(id).delete().then(() => {\r\n    dispatch({ type: 'REMOVESKILL_SUCCESS', id });\r\n  }).catch((err) => {\r\n    dispatch({ type: 'REMOVESKILL_SUCCESS', err });\r\n  })\r\n};\r\n","export const createKeyword = (data) => (dispatch, gs, { getFirestore }) => {\r\n  const firestore = getFirestore();\r\n  const ref = firestore.collection('keywords');\r\n\r\n  ref.where('word', '==', data.word).get().then((snapshot) => {\r\n    console.log(snapshot.length);\r\n    snapshot.forEach((doc) => { console.log(doc.id) });\r\n  }).then(() => {\r\n    ref.add({\r\n      ...data,\r\n    })\r\n  }).then(() => {\r\n    dispatch({ type: 'CREATEKEYWORD_SUCCESS', data });\r\n  }).catch((err) => {\r\n    dispatch({ type: 'CREATEKEYWORD_ERROR', err });\r\n  })\r\n};\r\n\r\nexport const updateKeyword = (data, id) => (dispatch, gs, { getFirestore }) => {\r\n  const firestore = getFirestore();\r\n  const ref = firestore.collection('keywords');\r\n  ref.doc(id).update({\r\n    ...data,\r\n  }).then(() => {\r\n    dispatch({ type: 'UPDATEKEYWORD_SUCCESS', data });\r\n  }).catch((err) => {\r\n    dispatch({ type: 'UPDATEKEYWORD_ERROR', err });\r\n  })\r\n};\r\n\r\nexport const removeKeyword = (id) => (dispatch, gs, { getFirestore }) => {\r\n  const firestore = getFirestore();\r\n  const ref = firestore.collection('keywords');\r\n  ref.doc(id).delete().then(() => {\r\n    dispatch({ type: 'REMOVEKEYWORD_SUCCESS', id });\r\n  }).catch((err) => {\r\n    dispatch({ type: 'REMOVEKEYWORD_SUCCESS', err });\r\n  })\r\n};\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { updateSkill, removeSkill } from 'actions/skillActions';\r\nimport { Typography, Card, IconButton, Button } from '@mui/material';\r\nimport { CardHeader, CardContent, Avatar } from '@mui/material';\r\nimport { red, green, blue, orange, indigo } from '@mui/material/colors';\r\nimport { Edit, Done } from '@mui/icons-material';\r\nimport { Formik } from 'formik';\r\nimport TextInput from 'atoms/TextInput';\r\n\r\nconst SkillCard = ({ skill, updateSkill, removeSkill }) => {\r\n  const [edit, setEdit] = useState(false);\r\n  const colors = [red, green, blue, orange, indigo];\r\n  const number = skill.title.charCodeAt(0) % 5;\r\n  let avatarColor = colors[number][700];\r\n\r\n  return (\r\n    <Card elevation={1}>\r\n      <CardHeader\r\n        title={skill.title}\r\n        avatar={\r\n          <Avatar sx={{ backgroundColor: avatarColor }}>\r\n            {skill.title[0].toUpperCase()}\r\n          </Avatar>\r\n        }\r\n        action={<>\r\n          {!edit && <IconButton\r\n            onClick={() => setEdit(true)}\r\n          >\r\n            <Edit />\r\n          </IconButton>}\r\n          {edit && <IconButton\r\n            type='submit'\r\n            form='edit'\r\n          >\r\n            <Done />\r\n          </IconButton>}\r\n        </>}\r\n      />\r\n      <CardContent>\r\n        {!edit && <Typography\r\n          variant='body2'\r\n          color='textSecondary'\r\n        >\r\n          {skill.description}\r\n        </Typography>}\r\n        {edit && <Formik\r\n          initialValues={{\r\n            description: skill.description,\r\n          }}\r\n          onSubmit={(values) => {\r\n            updateSkill(values, skill.id);\r\n            setEdit(false);\r\n          }}\r\n        >\r\n          {({ values, handleChange, handleSubmit }) => (\r\n            <form\r\n              id='edit'\r\n              onSubmit={handleSubmit}\r\n              autoComplete='off'\r\n            >\r\n              <TextInput\r\n                onChange={handleChange}\r\n                value={values.description}\r\n                name='description'\r\n                type='text'\r\n                rows={5}\r\n                multiline\r\n              />\r\n            </form>\r\n          )}\r\n        </Formik>}\r\n        {edit && <Button\r\n          color='secondary'\r\n          size='small'\r\n          onClick={() => { removeSkill(skill.id) }}\r\n        >\r\n          Delete Skill\r\n        </Button>}\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateSkill: (data, id) => dispatch(updateSkill(data, id)),\r\n  removeSkill: (id) => dispatch(removeSkill(id)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)\r\n  (SkillCard);\r\n","import React from 'react';\r\nimport { Box } from '@mui/material';\r\nimport Masonry from 'react-masonry-css';\r\nimport SkillCard from 'moleculs/SkillCard';\r\n\r\nconst breakpoints = { default: 2, 1100: 2, 700: 1 };\r\n\r\nconst SkillsGrid = ({ skills }) => (\r\n  <Box sx={{ mt: 4 }}>\r\n    <Masonry\r\n      breakpointCols={breakpoints}\r\n      className='my-masonry-grid'\r\n      columnClassName='my-masonry-grid_column'\r\n    >\r\n      {skills && skills.map(skill =>\r\n        <SkillCard\r\n          key={skill.id}\r\n          skill={skill}\r\n        />\r\n      )}\r\n    </Masonry>\r\n  </Box>\r\n);\r\n\r\nexport default SkillsGrid;\r\n","import React from 'react';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { Grid } from '@mui/material';\r\nimport ProfileCard from 'moleculs/ProfileCard';\r\nimport SkillCreate from 'organisms/SkillCreate';\r\nimport SkillsGrid from 'organisms/SkillsGrid';\r\n\r\nconst UserProfile = ({ skills, profile }) => (\r\n  <Grid container spacing={3}>\r\n    <Grid item md={3}>\r\n      <ProfileCard\r\n        profile={profile}\r\n      />\r\n    </Grid>\r\n    <Grid item md={9}>\r\n      <SkillCreate />\r\n      <SkillsGrid\r\n        skills={skills}\r\n      />\r\n    </Grid>\r\n  </Grid>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  skills: state.firestore.ordered.skills,\r\n  profile: state.firebase.profile,\r\n  auth: state.firebase.auth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect(props => [\r\n    {\r\n      collection: 'users', doc: props.auth.uid,\r\n      subcollections: [{ collection: 'skills' }],\r\n      orderBy: ['createdat', 'desc'],\r\n      storeAs: 'skills',\r\n    },\r\n  ]),\r\n)(UserProfile);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { updateProject } from 'actions/projectActions';\r\nimport { Typography, IconButton } from '@mui/material';\r\nimport { Add, Done, Close } from '@mui/icons-material';\r\nimport { Formik } from 'formik';\r\nimport TextInput from 'atoms/TextInput';\r\n\r\nconst KeywordsList = ({ id, details, updateProject }) => {\r\n  const [edit, setEdit] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <Typography\r\n        variant='body2'\r\n        color='textSecondary'\r\n        sx={{ mt: 3 }}\r\n      >\r\n        Keywords:\r\n        {!edit && <IconButton\r\n          size='small'\r\n          onClick={() => setEdit(true)}\r\n        >\r\n          <Add sx={{ fontSize: 'large' }} />\r\n        </IconButton>}\r\n        {edit && <IconButton\r\n          size='small'\r\n          type='submit'\r\n          form='edit'\r\n        >\r\n          <Done sx={{ fontSize: 'large' }} />\r\n        </IconButton>}\r\n      </Typography>\r\n      {edit && <Formik\r\n        initialValues={{\r\n          keyword: '',\r\n        }}\r\n        onSubmit={(values) => {\r\n          values.keyword && updateProject({\r\n            type: details.type,\r\n            keywords: [...details.keywords, values.keyword],\r\n          }, id);\r\n          setEdit(false);\r\n        }}\r\n      >\r\n        {({ values, handleChange, handleSubmit }) => (\r\n          <form\r\n            id='edit'\r\n            onSubmit={handleSubmit}\r\n            autoComplete='off'\r\n          >\r\n            <TextInput\r\n              onChange={handleChange}\r\n              value={values.keyword}\r\n              name='keyword'\r\n              type='text'\r\n              size='small'\r\n              add={1}\r\n            />\r\n          </form>\r\n        )}\r\n      </Formik>}\r\n      {details.keywords && details.keywords.map(item =>\r\n        <Typography\r\n          key={item}\r\n          sx={{ fontSize: 'small' }}\r\n          variant='body2'\r\n          color='textSecondary'\r\n        >\r\n          {item}\r\n          <IconButton\r\n            size='small'\r\n            onClick={() => {\r\n              updateProject({\r\n                type: details.type,\r\n                keywords: details.keywords.filter(i => i !== item),\r\n              }, id);\r\n            }}>\r\n            <Close sx={{ fontSize: 'small' }} />\r\n          </IconButton>\r\n        </Typography>\r\n      )}\r\n    </div>\r\n  )\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateProject: (data, id) => dispatch(updateProject(data, id)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)\r\n  (KeywordsList);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { updateProject } from 'actions/projectActions';\r\nimport { Typography, IconButton } from '@mui/material';\r\nimport { Add, Done, KeyboardArrowRight, Close } from '@mui/icons-material';\r\nimport { Formik } from 'formik';\r\nimport TextInput from 'atoms/TextInput';\r\n\r\nconst TeamList = ({ id, details, profile, updateProject }) => {\r\n  const [edit, setEdit] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <Typography\r\n        variant='body2'\r\n        color='textSecondary'\r\n        sx={{ mt: 3 }}\r\n      >\r\n        Team:\r\n        {!edit && <IconButton\r\n          size='small'\r\n          onClick={() => setEdit(true)}\r\n        >\r\n          <Add sx={{ fontSize: 'large' }} />\r\n        </IconButton>}\r\n        {edit && <IconButton\r\n          size='small'\r\n          type='submit'\r\n          form='edit'\r\n        >\r\n          <Done sx={{ fontSize: 'large' }} />\r\n        </IconButton>}\r\n      </Typography>\r\n      {edit && <Formik\r\n        initialValues={{\r\n          user: '',\r\n        }}\r\n        onSubmit={(values) => {\r\n          values.user && updateProject({\r\n            type: details.type,\r\n            team: [...details.team, { email: values.user, role: 'member' }],\r\n          }, id);\r\n          setEdit(false);\r\n        }}\r\n      >\r\n        {({ values, handleChange, handleSubmit }) => (\r\n          <form\r\n            id='edit'\r\n            onSubmit={handleSubmit}\r\n            autoComplete='off'\r\n          >\r\n            <TextInput\r\n              onChange={handleChange}\r\n              value={values.user}\r\n              name='user'\r\n              type='text'\r\n              size='small'\r\n              add={1}\r\n            />\r\n          </form>\r\n        )}\r\n      </Formik>}\r\n      {details.team && details.team.map(item =>\r\n        <Typography\r\n          key={item.email}\r\n          sx={{ fontSize: 'small' }}\r\n          variant='body2'\r\n          color='textSecondary'\r\n        >\r\n          {item.email} <br /> ({item.role})\r\n          {details.team.some(i =>\r\n            i.email === profile.email && i.role === 'admin'\r\n          ) && <IconButton\r\n            size='small'\r\n            onClick={() => {\r\n              let newRole = 'wait';\r\n              if (item.role === 'wait') { newRole = 'member' }\r\n              if (item.role === 'member') { newRole = 'admin' }\r\n              if (item.role === 'admin') { newRole = 'wait' }\r\n              item.email !== profile.email && updateProject({\r\n                team: details.team.map(i =>\r\n                  i.email === item.email ? { ...i, role: newRole } : i\r\n                ), type: details.type\r\n              }, id);\r\n            }}>\r\n              <KeyboardArrowRight sx={{ fontSize: 'small' }} />\r\n            </IconButton>}\r\n          {details.team.some(i =>\r\n            i.role === 'admin' && i.email !== item.email\r\n          ) && <IconButton\r\n            size='small'\r\n            onClick={() => {\r\n              updateProject({\r\n                type: details.type,\r\n                team: details.team.filter(i => i.email !== item.email),\r\n              }, id);\r\n            }}>\r\n              <Close sx={{ fontSize: 'small' }} />\r\n            </IconButton>}\r\n        </Typography>\r\n      )}\r\n    </div>\r\n  )\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateProject: (data, id) => dispatch(updateProject(data, id)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)\r\n  (TeamList);\r\n","import React from 'react';\r\nimport { FormControl, OutlinedInput, IconButton } from '@mui/material';\r\n\r\nconst ButtonInput = ({ name, icon, ...props }) => (\r\n  <FormControl fullWidth color='secondary'>\r\n    <OutlinedInput {...props}\r\n      sx={{ mt: 2, mb: 2 }}\r\n      placeholder={name}\r\n      name={name}\r\n      endAdornment={\r\n        <IconButton size='small' type='submit'>\r\n          {icon}\r\n        </IconButton>\r\n      }\r\n    />\r\n  </FormControl>\r\n);\r\n\r\nexport default ButtonInput;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { updateProject } from 'actions/projectActions';\r\nimport { Formik } from 'formik';\r\nimport { Send } from '@mui/icons-material';\r\nimport ButtonInput from './ButtonInput';\r\n\r\nconst ChatSection = ({ id, details, profile, updateProject }) => (\r\n  <div>\r\n    <Formik\r\n      initialValues={{\r\n        message: '',\r\n      }}\r\n      onSubmit={(values, { resetForm }) => {\r\n        values.message && updateProject({\r\n          type: details.type,\r\n          chat: [...details.chat, { email: profile.email, ...values }],\r\n        }, id);\r\n        resetForm();\r\n      }}\r\n    >\r\n      {({ values, handleChange, handleSubmit }) => (\r\n        <form\r\n          onSubmit={handleSubmit}\r\n          autoComplete='off'\r\n        >\r\n          <ButtonInput\r\n            onChange={handleChange}\r\n            value={values.message}\r\n            name='message'\r\n            type='text'\r\n            icon={<Send sx={{ fontSize: 20 }} />}\r\n          />\r\n        </form>\r\n      )}\r\n    </Formik>\r\n    {details.chat.map((item, index) => (\r\n      <p key={index}>\r\n        {item.email}<br />\r\n        {item.message}<br />\r\n      </p>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateProject: (data, id) => dispatch(updateProject(data, id)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)\r\n  (ChatSection);\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { removeProject, updateProject } from 'actions/projectActions';\r\nimport { Typography, Card, IconButton, Button } from '@mui/material';\r\nimport { CardHeader, CardContent } from '@mui/material';\r\nimport { Edit, Done, Chat, Subject } from '@mui/icons-material';\r\nimport { Formik } from 'formik';\r\nimport TextInput from 'atoms/TextInput';\r\nimport KeywordsList from 'atoms/KeywordsList';\r\nimport TeamList from 'atoms/TeamList';\r\nimport ChatSection from 'atoms/ChatSection';\r\n\r\nconst DetailsCard = ({ details, id, profile, removeProject, updateProject }) => {\r\n  const [edit, setEdit] = useState(false);\r\n  const [chat, setChat] = useState(false);\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Card elevation={1}>\r\n      <CardHeader\r\n        title={details.title}\r\n        action={<>\r\n          {!chat && !edit && <IconButton\r\n            onClick={() => setEdit(true)}\r\n          >\r\n            <Edit />\r\n          </IconButton>}\r\n          {!chat && edit && <IconButton\r\n            type='submit'\r\n            form='edit'\r\n          >\r\n            <Done />\r\n          </IconButton>}\r\n          {!edit && <IconButton\r\n            onClick={() => setChat(!chat)}\r\n          >\r\n            {chat ? <Subject /> : <Chat />}\r\n          </IconButton>}\r\n        </>}\r\n      />\r\n      {!chat && <CardContent>\r\n        {!edit && <Typography\r\n          variant='body2'\r\n          color='textSecondary'\r\n        >\r\n          {details.description}\r\n        </Typography>}\r\n        {!edit && <KeywordsList\r\n          id={id}\r\n          details={details}\r\n          profile={profile}\r\n        />}\r\n        {!edit && details.type === 'social' && <TeamList\r\n          id={id}\r\n          details={details}\r\n          profile={profile}\r\n        />}\r\n        {edit && <Formik\r\n          initialValues={{\r\n            title: details.title,\r\n            description: details.description,\r\n          }}\r\n          onSubmit={(values) => {\r\n            updateProject({ type: details.type, ...values }, id);\r\n            setEdit(false);\r\n          }}\r\n        >\r\n          {({ values, handleChange, handleSubmit }) => (\r\n            <form\r\n              id='edit'\r\n              onSubmit={handleSubmit}\r\n              autoComplete='off'\r\n            >\r\n              <TextInput\r\n                onChange={handleChange}\r\n                value={values.title}\r\n                name='title'\r\n                type='text'\r\n              />\r\n              <TextInput\r\n                onChange={handleChange}\r\n                value={values.description}\r\n                name='description'\r\n                type='text'\r\n                rows={10}\r\n                multiline\r\n              />\r\n            </form>\r\n          )}\r\n        </Formik>}\r\n        {edit && details.team.some(i =>\r\n          i.email === profile.email && i.role === 'admin'\r\n        ) && <Button\r\n          color='secondary'\r\n          size='small'\r\n          onClick={() => {\r\n            removeProject({ type: details.type }, id);\r\n            history.push('/' + details.type);\r\n          }}\r\n        >\r\n            Delete Project\r\n          </Button>}\r\n      </CardContent>}\r\n      {chat && <CardContent>\r\n        <ChatSection\r\n          id={id}\r\n          details={details}\r\n          profile={profile}\r\n        />\r\n      </CardContent>}\r\n    </Card>\r\n  )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.firebase.profile,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  removeProject: (data, id) => dispatch(removeProject(data, id)),\r\n  updateProject: (data, id) => dispatch(updateProject(data, id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)\r\n  (DetailsCard);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createElement } from 'actions/elementActions';\r\nimport { Formik } from 'formik';\r\nimport { Button } from '@mui/material';\r\nimport { KeyboardArrowRight } from '@mui/icons-material';\r\nimport TextInput from 'atoms/TextInput';\r\n\r\nconst ElementCreate = ({ createElement, type, projectid }) => {\r\n  const [file, setFile] = useState(null);\r\n  const [task, setTask] = useState(false);\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        title: '',\r\n        description: '',\r\n      }}\r\n      onSubmit={(values, { resetForm }) => {\r\n        createElement({ ...values, type }, file, projectid);\r\n        resetForm();\r\n      }}\r\n    >\r\n      {({ values, handleChange, handleSubmit }) => (\r\n        <form\r\n          onSubmit={handleSubmit}\r\n          autoComplete='off'\r\n        >\r\n          <TextInput\r\n            onChange={handleChange}\r\n            value={values.title}\r\n            name='title'\r\n            type='text'\r\n          />\r\n          <TextInput\r\n            onChange={handleChange}\r\n            value={values.description}\r\n            name='description'\r\n            type='text'\r\n            rows={2}\r\n            multiline\r\n          />\r\n          <Button\r\n            onClick={() => setTask(!task)}\r\n            variant={task ? 'contained' : 'outlined'}\r\n            color='secondary'\r\n            sx={{ mr: 2 }}\r\n          >\r\n            Task\r\n          </Button>\r\n          <Button\r\n            variant={file ? 'contained' : 'outlined'}\r\n            color='secondary'\r\n            component='label'\r\n            sx={{ mr: 2 }}\r\n          >\r\n            {file ? file.name : 'File'}\r\n            <input hidden\r\n              type='file'\r\n              onChange={e => setFile(e.target.files[0])}\r\n            />\r\n          </Button>\r\n          <Button\r\n            type='submit'\r\n            color='secondary'\r\n            variant='contained'\r\n            endIcon={<KeyboardArrowRight />}\r\n          >\r\n            Add Element\r\n          </Button>\r\n        </form>\r\n      )}\r\n    </Formik>\r\n  )\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  createElement: (data, file, projectid) =>\r\n    dispatch(createElement(data, file, projectid)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)\r\n  (ElementCreate);\r\n","export const createElement = (data, file, projectid) => (\r\n  dispatch, getState, { getFirebase, getFirestore }\r\n) => {\r\n  const firebase = getFirebase();\r\n  const firestore = getFirestore();\r\n  const authorid = getState().firebase.auth.uid;\r\n  const personal = firestore.collection('users').doc(authorid).collection('projects')\r\n    .doc(projectid).collection('elements');\r\n  const social = firestore.collection('projects').doc(projectid).collection('elements');\r\n  const ref = data.type === 'personal' ? personal : social;\r\n  const storageRef = firebase.storage().ref(projectid);\r\n  const fileRef = file && storageRef.child(file.name);\r\n  file && fileRef.put(file).then(() => (\r\n    fileRef.getDownloadURL().then((url) => (\r\n      ref.add({\r\n        ...data,\r\n        authorid: authorid,\r\n        createdat: new Date(),\r\n        filename: file.name,\r\n        fileurl: url,\r\n      })\r\n    ))\r\n  )).then(() => {\r\n    dispatch({ type: 'CREATEELEMENT_SUCCESS', data });\r\n  }).catch((err) => {\r\n    dispatch({ type: 'CREATEELEMENT_ERROR', err });\r\n  })\r\n  !file && ref.add({\r\n    ...data,\r\n    authorid: authorid,\r\n    createdat: new Date(),\r\n  }).then(() => {\r\n    dispatch({ type: 'CREATEELEMENT_SUCCESS', data });\r\n  }).catch((err) => {\r\n    dispatch({ type: 'CREATEELEMENT_ERROR', err });\r\n  })\r\n};\r\n\r\nexport const updateElement = (data, projectid, id) => (dispatch, getState, { getFirestore }) => {\r\n  const firestore = getFirestore();\r\n  const authorid = getState().firebase.auth.uid;\r\n  const personal = firestore.collection('users').doc(authorid).collection('projects')\r\n    .doc(projectid).collection('elements');\r\n  const social = firestore.collection('projects').doc(projectid).collection('elements');\r\n  const ref = data.type === 'personal' ? personal : social;\r\n  ref.doc(id).update({\r\n    ...data,\r\n  }).then(() => {\r\n    dispatch({ type: 'UPDATEELEMENT_SUCCESS', data });\r\n  }).catch((err) => {\r\n    dispatch({ type: 'UPDATEELEMENT_ERROR', err });\r\n  })\r\n};\r\n\r\nexport const removeElement = (data, projectid, id) => (dispatch, getState, { getFirestore }) => {\r\n  const firestore = getFirestore();\r\n  const authorid = getState().firebase.auth.uid;\r\n  const personal = firestore.collection('users').doc(authorid).collection('projects')\r\n    .doc(projectid).collection('elements');\r\n  const social = firestore.collection('projects').doc(projectid).collection('elements');\r\n  const ref = data.type === 'personal' ? personal : social;\r\n  ref.doc(id).delete().then(() => {\r\n    dispatch({ type: 'REMOVEELEMENT_SUCCESS', id });\r\n  }).catch((err) => {\r\n    dispatch({ type: 'REMOVEELEMENT_SUCCESS', err });\r\n  })\r\n};\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { updateElement, removeElement } from 'actions/elementActions';\r\nimport { Typography, Card, IconButton, Button } from '@mui/material';\r\nimport { CardHeader, CardContent, Avatar } from '@mui/material';\r\nimport { red, green, blue, orange, indigo } from '@mui/material/colors';\r\nimport { Download, CheckCircleOutline } from '@mui/icons-material';\r\nimport { Edit, Done } from '@mui/icons-material';\r\nimport { Formik } from 'formik';\r\nimport TextInput from 'atoms/TextInput';\r\nimport fileDownload from 'js-file-download';\r\nimport axios from 'axios';\r\n\r\nconst ElementCard = ({ element, projectid, updateElement, removeElement }) => {\r\n  const [edit, setEdit] = useState(false);\r\n  const colors = [red, green, blue, orange, indigo];\r\n  const number = element.title.charCodeAt(0) % 5;\r\n  let avatarColor = colors[number][700];\r\n\r\n  return (\r\n    <Card elevation={1}>\r\n      <CardHeader\r\n        title={element.title}\r\n        avatar={\r\n          <Avatar sx={{ backgroundColor: avatarColor }}>\r\n            {element.title[0].toUpperCase()}\r\n          </Avatar>\r\n        }\r\n        action={<>\r\n          {element.fileurl && <IconButton\r\n            onClick={() => {\r\n              axios.get(element.fileurl, { responseType: 'blob' })\r\n                .then(res => fileDownload(res.data, element.filename))\r\n            }}\r\n          >\r\n            <Download />\r\n          </IconButton>}\r\n          {element.task && <IconButton>\r\n            <CheckCircleOutline />\r\n          </IconButton>}\r\n          {!edit && <IconButton\r\n            onClick={() => setEdit(true)}\r\n          >\r\n            <Edit />\r\n          </IconButton>}\r\n          {edit && <IconButton\r\n            type='submit'\r\n            form='edit'\r\n          >\r\n            <Done />\r\n          </IconButton>}\r\n        </>}\r\n      />\r\n      <CardContent>\r\n        {!edit && <Typography\r\n          variant='body2'\r\n          color='textSecondary'\r\n        >\r\n          {element.description}\r\n        </Typography>}\r\n        {edit && <Formik\r\n          initialValues={{\r\n            description: element.description,\r\n          }}\r\n          onSubmit={(values) => {\r\n            updateElement({ type: element.type, ...values }, projectid, element.id);\r\n            setEdit(false);\r\n          }}\r\n        >\r\n          {({ values, handleChange, handleSubmit }) => (\r\n            <form\r\n              id='edit'\r\n              onSubmit={handleSubmit}\r\n              autoComplete='off'\r\n            >\r\n              <TextInput\r\n                onChange={handleChange}\r\n                value={values.description}\r\n                name='description'\r\n                type='text'\r\n                rows={5}\r\n                multiline\r\n              />\r\n            </form>\r\n          )}\r\n        </Formik>}\r\n        {edit && <Button\r\n          color='secondary'\r\n          size='small'\r\n          onClick={() => {\r\n            removeElement({ type: element.type }, projectid, element.id);\r\n          }}\r\n        >\r\n          Delete Element\r\n        </Button>}\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateElement: (data, projectid, id) => dispatch(updateElement(data, projectid, id)),\r\n  removeElement: (data, projectid, id) => dispatch(removeElement(data, projectid, id)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)\r\n  (ElementCard);\r\n","import React from 'react';\r\nimport { Box } from '@mui/material';\r\nimport Masonry from 'react-masonry-css';\r\nimport ElementCard from 'moleculs/ElementCard';\r\n\r\nconst breakpoints = { default: 2, 1100: 2, 700: 1 };\r\n\r\nconst ElementsGrid = ({ elements, projectid }) => (\r\n  <Box sx={{ mt: 4 }}>\r\n    <Masonry\r\n      breakpointCols={breakpoints}\r\n      className='my-masonry-grid'\r\n      columnClassName='my-masonry-grid_column'\r\n    >\r\n      {elements && elements.map(element =>\r\n        <ElementCard\r\n          key={element.id}\r\n          element={element}\r\n          projectid={projectid}\r\n        />\r\n      )}\r\n    </Masonry>\r\n  </Box>\r\n);\r\n\r\nexport default ElementsGrid;\r\n","import React from 'react';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { Grid } from '@mui/material';\r\nimport DetailsCard from 'moleculs/DetailsCard';\r\nimport ElementCreate from 'organisms/ElementCreate';\r\nimport ElementsGrid from 'organisms/ElementsGrid';\r\n\r\nconst ProjectDetails = ({ project, id, profile, elements }) => (\r\n  project && project.team.some(i =>\r\n    i.email === profile.email && (i.role === 'member' || i.role === 'admin')\r\n  ) ? <Grid container spacing={3}>\r\n    <Grid item md={3}>\r\n      <DetailsCard\r\n        details={project}\r\n        id={id}\r\n      />\r\n    </Grid>\r\n    <Grid item md={9}>\r\n      <ElementCreate\r\n        type={project.type}\r\n        projectid={id}\r\n      />\r\n      <ElementsGrid\r\n        elements={elements}\r\n        projectid={id}\r\n      />\r\n    </Grid>\r\n  </Grid> : <p className='text-center'>loading...</p>\r\n);\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const profile = state.firebase.profile;\r\n  const type = ownProps.match.params.type;\r\n  const id = ownProps.match.params.id;\r\n  const personalProjects = state.firestore.data.personalProjects;\r\n  const socialProjects = state.firestore.data.socialProjects;\r\n  const personalElements = state.firestore.ordered.personalElements;\r\n  const socialElements = state.firestore.ordered.socialElements;\r\n  if (type === 'personal') {\r\n    return {\r\n      auth: state.firebase.auth,\r\n      project: personalProjects && personalProjects[id],\r\n      elements: personalElements,\r\n      id, profile,\r\n    }\r\n  } else {\r\n    return {\r\n      auth: state.firebase.auth,\r\n      project: socialProjects && socialProjects[id],\r\n      elements: socialElements,\r\n      id, profile,\r\n    }\r\n  }\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect(props => [\r\n    {\r\n      collection: 'users',\r\n      doc: props.auth.uid,\r\n      subcollections: [{\r\n        collection: 'projects',\r\n      }],\r\n      storeAs: 'personalProjects',\r\n    },\r\n    {\r\n      collection: 'projects',\r\n      storeAs: 'socialProjects',\r\n    },\r\n    {\r\n      collection: 'users',\r\n      doc: props.auth.uid,\r\n      subcollections: [{\r\n        collection: 'projects',\r\n        doc: props.id,\r\n      }, {\r\n        collection: 'elements',\r\n      }],\r\n      orderBy: ['createdat', 'desc'],\r\n      storeAs: 'personalElements',\r\n    },\r\n    {\r\n      collection: 'projects',\r\n      doc: props.id,\r\n      subcollections: [{\r\n        collection: 'elements',\r\n      }],\r\n      orderBy: ['createdat', 'desc'],\r\n      storeAs: 'socialElements',\r\n    },\r\n  ]),\r\n)(ProjectDetails);\r\n","import React from 'react';\r\nimport { FormControl, MenuItem } from '@mui/material';\r\nimport { Select, InputLabel } from '@mui/material';\r\n\r\nconst SelectInput = ({ name, items, ...props }) => (\r\n  <FormControl fullWidth>\r\n    <InputLabel color='secondary'>{name}</InputLabel>\r\n    <Select {...props}\r\n      sx={{ mb: 2 }}\r\n      label={name}\r\n      name={name}\r\n      color='secondary'\r\n    >\r\n      {items.map(item =>\r\n        <MenuItem\r\n          value={item}\r\n          key={item}\r\n        >\r\n          {item}\r\n        </MenuItem>\r\n      )}\r\n    </Select>\r\n  </FormControl>\r\n);\r\n\r\nexport default SelectInput;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createProject } from 'actions/projectActions';\r\nimport { Formik } from 'formik';\r\nimport { Button } from '@mui/material';\r\nimport { KeyboardArrowRight } from '@mui/icons-material';\r\nimport TextInput from 'atoms/TextInput';\r\nimport SelectInput from 'atoms/SelectInput';\r\n\r\nconst ProjectCreate = ({ createProject, history }) => (\r\n  <Formik\r\n    initialValues={{\r\n      type: 'personal',\r\n      title: '',\r\n      keywords: '',\r\n      description: '',\r\n    }}\r\n    onSubmit={(values) => {\r\n      createProject({\r\n        ...values,\r\n        keywords: values.keywords.split(' '),\r\n      });\r\n      history.push('/' + values.type);\r\n    }}\r\n  >\r\n    {({ values, handleChange, handleSubmit }) => (\r\n      <form\r\n        onSubmit={handleSubmit}\r\n        autoComplete='off'\r\n      >\r\n        <SelectInput\r\n          onChange={handleChange}\r\n          value={values.type}\r\n          items={['personal', 'social']}\r\n          name='type'\r\n        />\r\n        <TextInput\r\n          onChange={handleChange}\r\n          value={values.title}\r\n          name='title'\r\n          type='text'\r\n        />\r\n        <TextInput\r\n          onChange={handleChange}\r\n          value={values.keywords}\r\n          name='keywords'\r\n          type='text'\r\n        />\r\n        <TextInput\r\n          onChange={handleChange}\r\n          value={values.description}\r\n          name='description'\r\n          type='text'\r\n          rows={7}\r\n          multiline\r\n        />\r\n        <Button\r\n          type='submit'\r\n          color='secondary'\r\n          variant='contained'\r\n          endIcon={<KeyboardArrowRight />}\r\n        >\r\n          Create Project\r\n        </Button>\r\n      </form>\r\n    )}\r\n  </Formik>\r\n);\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  createProject: (data) => dispatch(createProject(data)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)\r\n  (ProjectCreate);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from 'actions/profileActions';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Formik } from 'formik';\r\nimport { Button } from '@mui/material';\r\nimport { KeyboardArrowRight } from '@mui/icons-material';\r\nimport TextInput from 'atoms/TextInput';\r\n\r\nconst SigninForm = ({ signIn, error, auth }) => (auth.uid ?\r\n  <Redirect to='/profile' /> :\r\n  <Formik\r\n    initialValues={{\r\n      email: '',\r\n      password: '',\r\n    }}\r\n    onSubmit={(values) => {\r\n      signIn(values);\r\n    }}\r\n  >\r\n    {({ values, handleChange, handleSubmit }) => (\r\n      <form onSubmit={handleSubmit} >\r\n        <TextInput\r\n          onChange={handleChange}\r\n          value={values.email}\r\n          name='email'\r\n          type='email'\r\n        />\r\n        <TextInput\r\n          onChange={handleChange}\r\n          value={values.password}\r\n          name='password'\r\n          type='password'\r\n        />\r\n        <Button\r\n          type='submit'\r\n          color='secondary'\r\n          variant='contained'\r\n          endIcon={<KeyboardArrowRight />}\r\n        >\r\n          Sign In\r\n        </Button>\r\n        {error && <p>{error}</p>}\r\n      </form>\r\n    )}\r\n  </Formik>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  error: state.profile.error,\r\n  auth: state.firebase.auth,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  signIn: (creds) => dispatch(signIn(creds)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)\r\n  (SigninForm);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signUp } from 'actions/profileActions';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Formik } from 'formik';\r\nimport { Button } from '@mui/material';\r\nimport { KeyboardArrowRight } from '@mui/icons-material';\r\nimport TextInput from 'atoms/TextInput';\r\n\r\nconst SignupForm = ({ signUp, error, auth }) => {\r\n  const [mistake, setMistake] = useState(false);\r\n\r\n  return (auth.uid ?\r\n    <Redirect to='/profile' /> :\r\n    <Formik\r\n      initialValues={{\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        confirm: '',\r\n      }}\r\n      onSubmit={(values) => {\r\n        if (values.password === values.confirm) {\r\n          signUp({\r\n            name: values.name,\r\n            email: values.email,\r\n            password: values.password,\r\n          });\r\n        } else { setMistake(true) }\r\n      }}\r\n    >\r\n      {({ values, handleChange, handleSubmit }) => (\r\n        <form onSubmit={handleSubmit}>\r\n          <TextInput\r\n            onChange={handleChange}\r\n            value={values.name}\r\n            name='name'\r\n            type='text'\r\n          />\r\n          <TextInput\r\n            onChange={handleChange}\r\n            value={values.email}\r\n            name='email'\r\n            type='email'\r\n          />\r\n          <TextInput\r\n            onChange={handleChange}\r\n            value={values.password}\r\n            name='password'\r\n            type='password'\r\n          />\r\n          <TextInput\r\n            onChange={handleChange}\r\n            value={values.confirm}\r\n            name='confirm'\r\n            type='password'\r\n          />\r\n          <Button\r\n            type='submit'\r\n            color='secondary'\r\n            variant='contained'\r\n            endIcon={<KeyboardArrowRight />}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          {error && <p>{error}</p>}\r\n          {mistake && <p>Passowrds are not identical</p>}\r\n        </form>\r\n      )}\r\n    </Formik>\r\n  )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  error: state.profile.error,\r\n  auth: state.firebase.auth,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  signUp: (user) => dispatch(signUp(user)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)\r\n  (SignupForm);\r\n","import React from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport { Switch, Redirect } from 'react-router-dom';\r\nimport { createTheme } from '@mui/material/styles';\r\nimport { ThemeProvider } from '@mui/material';\r\nimport { blue } from '@mui/material/colors';\r\nimport MainLayout from 'templates/MainLayout';\r\nimport ProtectedRoute from 'access/ProtectedRoute';\r\nimport PersonalProjects from 'pages/PersonalProjects';\r\nimport SocialProjects from 'pages/SocialProjects';\r\nimport UserProfile from 'pages/UserProfile';\r\nimport ProjectDetails from 'pages/ProjectDetails';\r\nimport ProjectCreate from 'pages/ProjectCreate';\r\nimport SigninForm from 'access/SigninForm';\r\nimport SignupForm from 'access/SignupForm';\r\n\r\nconst theme = createTheme({\r\n  typography: {\r\n    fontFamily: 'Lato',\r\n  },\r\n  palette: {\r\n    primary: { main: '#fefefe' },\r\n    secondary: blue,\r\n  },\r\n});\r\n\r\nconst App = () => (\r\n  <ThemeProvider theme={theme}>\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <MainLayout>\r\n        <Switch>\r\n          <Route path='/signin' component={SigninForm} />\r\n          <Route path='/signup' component={SignupForm} />\r\n          <ProtectedRoute path='/profile' component={UserProfile} />\r\n          <ProtectedRoute path='/create' component={ProjectCreate} />\r\n          <ProtectedRoute exact path='/' render={() => <Redirect to='/profile' />} />\r\n          <ProtectedRoute exact path='/personal' component={PersonalProjects} />\r\n          <ProtectedRoute exact path='/social' component={SocialProjects} />\r\n          <ProtectedRoute path='/:type/:id' component={ProjectDetails} />\r\n        </Switch>\r\n      </MainLayout>\r\n    </BrowserRouter>\r\n  </ThemeProvider>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\nimport { isLoaded } from 'react-redux-firebase';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { getFirebase, ReactReduxFirebaseProvider } from 'react-redux-firebase';\r\nimport { getFirestore, createFirestoreInstance } from 'redux-firestore';\r\nimport rootReducer from 'reducers/rootReducer';\r\nimport thunk from 'redux-thunk';\r\nimport database from 'database';\r\nimport App from 'App';\r\nimport 'index.css';\r\n\r\nconst store = createStore(rootReducer, compose(\r\n  applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\r\n));\r\n\r\nconst rrfConfig = {\r\n  userProfile: 'users',\r\n  useFirestoreForProfile: true,\r\n  attachAuthIsReady: true,\r\n};\r\n\r\nconst rrfProps = {\r\n  firebase: database,\r\n  config: rrfConfig,\r\n  dispatch: store.dispatch,\r\n  createFirestoreInstance,\r\n};\r\n\r\nconst AuthIsLoaded = ({ children }) => {\r\n  const auth = useSelector(state => state.firebase.auth);\r\n  return isLoaded(auth) ? children : <p className='text-center'>loading...</p>;\r\n};\r\n\r\nReactDOM.render(\r\n  <ReactReduxFirebaseProvider {...rrfProps}>\r\n    <Provider store={store}>\r\n      <AuthIsLoaded>\r\n        <App />\r\n      </AuthIsLoaded>\r\n    </Provider>\r\n  </ReactReduxFirebaseProvider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}